<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="clr-namespace:UniversalAnimeDownloader.Animations"
    xmlns:local="clr-namespace:UniversalAnimeDownloader.DefinedResources"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">
    <Style
        x:Key="MaterialDesignActionFlatButton"
        BasedOn="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style x:Key="SideBarNavIcon" TargetType="materialDesign:PackIcon">
        <Setter Property="Width" Value="{DynamicResource Heading2}" />
        <Setter Property="Height" Value="{DynamicResource Heading2}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>

    <Style x:Key="SideBarNavTextBlock" TargetType="TextBlock">
        <Setter Property="Grid.Column" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="{DynamicResource Heading2}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>

    <Style x:Key="listViewEpisodeBaseTemplate" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Grid.Row" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Binding Path="View" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <converters:ListViewGridViewConverter>
                            <converters:ListViewGridViewConverter.DefaultValue>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                    <Setter Property="Padding" Value="8"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                                    <VisualTransition.GeneratedEasingFunction>
                                                                        <CircleEase EasingMode="EaseOut"/>
                                                                    </VisualTransition.GeneratedEasingFunction>
                                                                </VisualTransition>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="SelectionStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Selected">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unselected"/>
                                                            <VisualState x:Name="SelectedUnfocused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0.03" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Grid>
                                                        <Border x:Name="MouseOverBorder" Opacity="0">
                                                            <Border.Background>
                                                                <TemplateBinding Property="Foreground">
                                                                    <TemplateBinding.Converter>
                                                                        <converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                    </TemplateBinding.Converter>
                                                                </TemplateBinding>
                                                            </Border.Background>
                                                        </Border>
                                                        <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                            <Border.Background>
                                                                <TemplateBinding Property="Foreground">
                                                                    <TemplateBinding.Converter>
                                                                        <converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                    </TemplateBinding.Converter>
                                                                </TemplateBinding>
                                                            </Border.Background>
                                                            <Border.RenderTransform>
                                                                <ScaleTransform ScaleX="1"/>
                                                            </Border.RenderTransform>
                                                        </Border>
                                                        <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                            <materialDesign:Ripple.Feedback>
                                                                <TemplateBinding Property="Foreground">
                                                                    <TemplateBinding.Converter>
                                                                        <converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                    </TemplateBinding.Converter>
                                                                </TemplateBinding>
                                                            </materialDesign:Ripple.Feedback>
                                                        </materialDesign:Ripple>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.56"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </converters:ListViewGridViewConverter.DefaultValue>
                            <converters:ListViewGridViewConverter.ViewValue>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border x:Name="Border" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ListViewAssist.ListViewItemPadding), RelativeSource={RelativeSource Self}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </converters:ListViewGridViewConverter.ViewValue>
                        </converters:ListViewGridViewConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <Binding Path="View" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <converters:ListViewGridViewConverter>
                            <converters:ListViewGridViewConverter.DefaultValue>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </converters:ListViewGridViewConverter.DefaultValue>
                            <converters:ListViewGridViewConverter.ViewValue>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <ScrollViewer Style="{DynamicResource}">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </converters:ListViewGridViewConverter.ViewValue>
                        </converters:ListViewGridViewConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>