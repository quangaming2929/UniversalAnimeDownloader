<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="clr-namespace:UniversalAnimeDownloader.Animations"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:ex="clr-namespace:UniversalAnimeDownloader.Extensions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:UniversalAnimeDownloader.DefinedResources"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel">
    <Style x:Key="DisableSelectionListbox" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, FallbackValue=Stretch, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding (RenderOptions.ClearTypeHint), FallbackValue=Auto, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, FallbackValue=Center, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
    </Style>

    <Style
        x:Key="MaterialDesignActionFlatButton"
        BasedOn="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style x:Key="NoDecorationButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Fill="{DynamicResource MaterialDesignPaper}" Opacity="0.001" />
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JumpingPackIcon" TargetType="materialDesign:PackIcon">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type materialDesign:PackIcon}">
                    <Border
                        x:Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Viewbox
                            x:Name="container"
                            FlowDirection="{TemplateBinding FlowDirection}"
                            RenderTransformOrigin="0.5,0.5">
                            <Viewbox.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Viewbox.RenderTransform>
                            <Canvas
                                Width="24"
                                Height="24"
                                Background="Transparent">
                                <Path Data="{Binding Data, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=bd, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="closing" />
                                <BeginStoryboard x:Name="main">
                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="0:0:0.25"
                                            Storyboard.TargetName="container"
                                            Storyboard.TargetProperty="RenderTransform.Children[2].Angle"
                                            To="15"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            BeginTime="0:0:0.55"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="container"
                                            Storyboard.TargetProperty="RenderTransform.Children[2].Angle"
                                            From="15"
                                            To="-15"
                                            Duration="0:0:0.4">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            BeginTime="0:0:0.25"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="container"
                                            Storyboard.TargetProperty="RenderTransform.Children[3].Y"
                                            From="0"
                                            To="-35"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard x:Name="closing">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="container"
                                            Storyboard.TargetProperty="RenderTransform.Children[2].Angle"
                                            To="0"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="container"
                                            Storyboard.TargetProperty="RenderTransform.Children[3].Y"
                                            To="0"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                                <RemoveStoryboard BeginStoryboardName="main" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="SideBarNavIcon"
        BasedOn="{StaticResource JumpingPackIcon}"
        TargetType="materialDesign:PackIcon">
        <Setter Property="Width" Value="{DynamicResource Heading2}" />
        <Setter Property="Height" Value="{DynamicResource Heading2}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>

    <Style x:Key="AutoSizeIconPack" TargetType="materialDesign:PackIcon">
        <Setter Property="Width" Value="auto" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>

    <Style x:Key="SideBarNavTextBlock" TargetType="TextBlock">
        <Setter Property="Grid.Column" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource Heading2}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>

    <Style x:Key="DownloadMenuCenterTextBlock" TargetType="TextBlock">
        <Setter Property="Grid.Row" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="listViewEpisodeBaseTemplate" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Grid.Row" Value="2" />
        <Setter Property="Grid.ColumnSpan" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Binding Path="View" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <converters:ListViewGridViewConverter>
                            <converters:ListViewGridViewConverter.DefaultValue>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
                                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
                                    <Setter Property="Padding" Value="8" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border
                                                    Margin="{TemplateBinding Margin}"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    ClipToBounds="{TemplateBinding ClipToBounds}">
                                                    <Grid>
                                                        <Border x:Name="MouseOverBorder" Opacity="0">
                                                            <Border.Background>
                                                                <TemplateBinding Property="Foreground">
                                                                    <TemplateBinding.Converter>
                                                                        <converters:BrushRoundConverter HighValue="White" LowValue="Black" />
                                                                    </TemplateBinding.Converter>
                                                                </TemplateBinding>
                                                            </Border.Background>
                                                        </Border>
                                                        <Border
                                                            x:Name="SelectedBorder"
                                                            Opacity="0"
                                                            RenderTransformOrigin="0.5,0.5">
                                                            <Border.Background>
                                                                <TemplateBinding Property="Foreground">
                                                                    <TemplateBinding.Converter>
                                                                        <converters:BrushRoundConverter HighValue="White" LowValue="Black" />
                                                                    </TemplateBinding.Converter>
                                                                </TemplateBinding>
                                                            </Border.Background>
                                                            <Border.RenderTransform>
                                                                <ScaleTransform ScaleX="1" />
                                                            </Border.RenderTransform>
                                                        </Border>
                                                        <materialDesign:Ripple
                                                            Padding="{TemplateBinding Padding}"
                                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Content="{TemplateBinding Content}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            Focusable="False"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <materialDesign:Ripple.Feedback>
                                                                <TemplateBinding Property="Foreground">
                                                                    <TemplateBinding.Converter>
                                                                        <converters:BrushRoundConverter HighValue="White" LowValue="Black" />
                                                                    </TemplateBinding.Converter>
                                                                </TemplateBinding>
                                                            </materialDesign:Ripple.Feedback>
                                                        </materialDesign:Ripple>
                                                    </Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition
                                                                    GeneratedDuration="0:0:0.3"
                                                                    Storyboard="{x:Null}"
                                                                    From="{x:Null}"
                                                                    To="Normal">
                                                                    <VisualTransition.GeneratedEasingFunction>
                                                                        <CircleEase EasingMode="EaseOut" />
                                                                    </VisualTransition.GeneratedEasingFunction>
                                                                </VisualTransition>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="MouseOverBorder"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        To="0.1"
                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="SelectionStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition
                                                                    GeneratedDuration="0:0:0.6"
                                                                    GeneratedEasingFunction="{x:Null}"
                                                                    Storyboard="{x:Null}"
                                                                    From="{x:Null}"
                                                                    To="{x:Null}" />
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Selected">
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="SelectedBorder"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        To="0.18"
                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unselected" />
                                                            <VisualState x:Name="SelectedUnfocused">
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="SelectedBorder"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        To="0.03"
                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.56" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </converters:ListViewGridViewConverter.DefaultValue>
                            <converters:ListViewGridViewConverter.ViewValue>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border
                                                    x:Name="Border"
                                                    Padding="{Binding (materialDesign:ListViewAssist.ListViewItemPadding), RelativeSource={RelativeSource Self}}"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{DynamicResource MaterialDesignDivider}"
                                                    BorderThickness="0,0,0,1"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <GridViewRowPresenter
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Columns="{TemplateBinding GridView.ColumnCollection}"
                                                        Content="{TemplateBinding Content}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.56" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </converters:ListViewGridViewConverter.ViewValue>
                        </converters:ListViewGridViewConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <Binding Path="View" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <converters:ListViewGridViewConverter>
                            <converters:ListViewGridViewConverter.DefaultValue>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <ItemsPresenter />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </converters:ListViewGridViewConverter.DefaultValue>
                            <converters:ListViewGridViewConverter.ViewValue>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <ItemsPresenter />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </converters:ListViewGridViewConverter.ViewValue>
                        </converters:ListViewGridViewConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="floatingHintCbx"
        BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"
        TargetType="ComboBox">
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="AnimeCardPanel"
        BasedOn="{StaticResource MaterialDesignListBox}"
        TargetType="ListBox">
        <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DisableSelectionListbox}" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnimeCardInternalPanel" TargetType="ItemsControl">
        <Setter Property="ItemsSource" Value="{Binding}" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>