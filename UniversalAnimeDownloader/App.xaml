<Application x:Class="UniversalAnimeDownloader.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UniversalAnimeDownloader"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:controlzEx="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:localConverter="clr-namespace:UniversalAnimeDownloader.ValueConverter"
             xmlns:customControl="clr-namespace:UniversalAnimeDownloader.CustomControl"
             xmlns:userControl="clr-namespace:UniversalAnimeDownloader.UserControls"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:setting="clr-namespace:UniversalAnimeDownloader.Settings"
             StartupUri="View\MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <localConverter:InvertableBooleanToVisibilityConverter x:Key="boolToInvisConverter"/>

            <converters:NullableToVisibilityConverter x:Key="InvertedNullVisibilityConverter" NullValue="Visible" NotNullValue="Collapsed" />
            <converters:NullableToVisibilityConverter x:Key="NullVisibilityConverter" />
            <materialDesign:PackIcon x:Shared="False" x:Key="MaterialDesignMultiFloatingActionPopupBoxIcon"
                  Kind="Plus" Width="24" Height="24" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=materialDesign:PopupBox}, Path=Foreground}" />

            <Style TargetType="materialDesign:PackIcon">
                <Setter Property="Width" Value="{DynamicResource Heading2}"/>
                <Setter Property="Height" Value="auto"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="ProgressBar" x:Key="SimplifiedProgressBar">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="OrangeRed"/>
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForeGroundColor}"/>
                <Setter Property="FontSize" Value="{DynamicResource Heading2}"/>
            </Style>

            <Style TargetType="customControl:TaskCompletePopup" x:Key="DarkThemePopup">
                <Setter Property="DialogHeight" Value="350"/>
                <Setter Property="DialogWidth" Value="500"/>
                <Setter Property="ActionButtonStyle" Value="{StaticResource MaterialDesignFlatButton}"/>
                <Setter Property="ButtonRippleColor" Value="#666666"/>
                <Setter Property="CardBackGround" Value="#494949"/>
            </Style>

            <Style x:Key="MaterialDesignFloatingActionButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
                <Setter Property="Width" Value="56"/>
                <Setter Property="Height" Value="56"/>
            </Style>

            <Style x:Key="MaterialDesignFloatingActionMiniButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="White" />
                <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource SecondaryAccentBrush}" />
                <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource MaterialDesignDivider}" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2" />
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Width" Value="40" />
                <Setter Property="Height" Value="40" />
                <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                    <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" 
                                     Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}"
                                     x:Name="border">
                                    </Ellipse>
                                </AdornerDecorator>
                                <ProgressBar x:Name="ProgressBar" 
                                     Style="{DynamicResource MaterialDesignCircularProgressBar}" 
                                     Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Minimum)}"
                                     Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Maximum)}"
                                     Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorForeground)}"
                                     Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorBackground)}"
                                     Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Value)}"
                                     IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndeterminate)}"
                                     Opacity="{Binding RelativeSource={RelativeSource TemplatedParent},  Path=(materialDesign:ButtonProgressAssist.Opacity)}"
                                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                     Margin="-8" 
                                     Width="{TemplateBinding Width, Converter={StaticResource MathAddConverter}, ConverterParameter={StaticResource ProgressRingStrokeWidth}}"
                                     Height="{TemplateBinding Height, Converter={StaticResource MathAddConverter}, ConverterParameter={StaticResource ProgressRingStrokeWidth}}"
                                     HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Stretch"
                                     RenderTransformOrigin=".5, .5">
                                    <ProgressBar.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0" ScaleY="0" />
                                        </TransformGroup>
                                    </ProgressBar.RenderTransform>
                                </ProgressBar>
                                <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                                <materialDesign:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"  
                                    Clip="{Binding ElementName=GeometryEllipse, Path=RenderedGeometry}" ClipToBounds="True"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Ellipse x:Name="GeometryEllipse" Fill="Transparent" IsHitTestVisible="False" Focusable="False" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                                </Trigger>
                                <Trigger Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" From=".9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                <DoubleAnimation Duration="0:0:0.2" From=".9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" From="1" To=".9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                <DoubleAnimation Duration="0:0:0.2" From="1" To=".9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FlatButtonForCustomControl" TargetType="Button">
                <Setter Property="AllowDrop" Value="False"/>
            </Style>

            <Style x:Key="cbxQualitySelector" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                <Setter Property="materialDesign:HintAssist.Hint" Value="Quality: "/>
                <Setter Property="MinWidth" Value="72"/>
                <Setter Property="Grid.Row" Value="1"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="16 0 0 0"/>
                <Setter Property="ItemsSource" Value="{x:Static local:Common.GetQualities}"/>
                <Setter Property="SelectedValue" Value="{Binding Quality, Mode=OneWayToSource}"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <sys:Double x:Key="Heading">40</sys:Double>
            <sys:Double x:Key="Heading2">24</sys:Double>
            <sys:Double x:Key="Heading3">18</sys:Double>
            <sys:Double x:Key="Heading4">15</sys:Double>
            <sys:Double x:Key="WindowWidth">1080</sys:Double>

            <SolidColorBrush x:Key="Black">#1E262C</SolidColorBrush>
            <SolidColorBrush x:Key="ForeGroundColor">White</SolidColorBrush>
            <SolidColorBrush x:Key="Primary">DeepSkyBlue</SolidColorBrush>
            <SolidColorBrush x:Key="FileSize">LightGray</SolidColorBrush>


            <Style x:Key="listViewEpisodeBaseTemplate" TargetType="ListView">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="Grid.Row" Value="2"/>
                <Setter Property="Grid.ColumnSpan" Value="3"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Binding Path="View" RelativeSource="{RelativeSource Self}">
                            <Binding.Converter>
                                <converters:ListViewGridViewConverter>
                                    <converters:ListViewGridViewConverter.DefaultValue>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="Padding" Value="8"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                <CircleEase EasingMode="EaseOut"/>
                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                        </VisualTransition>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="SelectionStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Selected">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unselected"/>
                                                                    <VisualState x:Name="SelectedUnfocused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.03" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Grid>
                                                                <Border x:Name="MouseOverBorder" Opacity="0">
                                                                    <Border.Background>
                                                                        <TemplateBinding Property="Foreground">
                                                                            <TemplateBinding.Converter>
                                                                                <converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                            </TemplateBinding.Converter>
                                                                        </TemplateBinding>
                                                                    </Border.Background>
                                                                </Border>
                                                                <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                                    <Border.Background>
                                                                        <TemplateBinding Property="Foreground">
                                                                            <TemplateBinding.Converter>
                                                                                <converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                            </TemplateBinding.Converter>
                                                                        </TemplateBinding>
                                                                    </Border.Background>
                                                                    <Border.RenderTransform>
                                                                        <ScaleTransform ScaleX="1"/>
                                                                    </Border.RenderTransform>
                                                                </Border>
                                                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                    <materialDesign:Ripple.Feedback>
                                                                        <TemplateBinding Property="Foreground">
                                                                            <TemplateBinding.Converter>
                                                                                <converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                            </TemplateBinding.Converter>
                                                                        </TemplateBinding>
                                                                    </materialDesign:Ripple.Feedback>
                                                                </materialDesign:Ripple>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.56"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </converters:ListViewGridViewConverter.DefaultValue>
                                    <converters:ListViewGridViewConverter.ViewValue>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ListViewAssist.ListViewItemPadding), RelativeSource={RelativeSource Self}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </converters:ListViewGridViewConverter.ViewValue>
                                </converters:ListViewGridViewConverter>
                            </Binding.Converter>
                        </Binding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="False"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <Binding Path="View" RelativeSource="{RelativeSource Self}">
                            <Binding.Converter>
                                <converters:ListViewGridViewConverter>
                                    <converters:ListViewGridViewConverter.DefaultValue>
                                        <ControlTemplate TargetType="{x:Type ListView}">
                                            <ScrollViewer>
                                                <ItemsPresenter/>
                                            </ScrollViewer>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsGrouping" Value="True">
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </converters:ListViewGridViewConverter.DefaultValue>
                                    <converters:ListViewGridViewConverter.ViewValue>
                                        <ControlTemplate TargetType="{x:Type ListView}">
                                            <ScrollViewer Style="{DynamicResource}">
                                                <ItemsPresenter/>
                                            </ScrollViewer>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsGrouping" Value="True">
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </converters:ListViewGridViewConverter.ViewValue>
                                </converters:ListViewGridViewConverter>
                            </Binding.Converter>
                        </Binding>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListView" x:Key="listViewDownloadTemplate" BasedOn="{StaticResource listViewEpisodeBaseTemplate}">
                <Setter Property="ItemsSource" Value="{Binding AnimeEpisodes}"/>
                <Setter Property="ItemTemplate" >
                    <Setter.Value>
                        <DataTemplate>
                            <Border>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="75"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="5"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding EpisodeName}" FontSize="{DynamicResource Heading2}"/>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding DetailVisibility}" FlowDirection="RightToLeft"
                                                HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                        <StackPanel.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="FontSize" Value="{DynamicResource Heading4}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource FileSize}"/>
                                            </Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="FontSize" Value="{DynamicResource Heading4}"/>
                                            </Style>
                                        </StackPanel.Resources>

                                        <TextBlock>
                                            <TextBlock Text="MB"/>
                                            <TextBlock Text="{Binding ByteToReceive, StringFormat='0.00'}"/>
                                            <TextBlock Text="/"/>
                                            <TextBlock Text="{Binding ByteReceived, StringFormat='0.00'}"/>
                                        </TextBlock>
                                        <materialDesign:PackIcon Kind="File" Margin="0,0,10,0"/>

                                        <TextBlock Text="{Binding Eta}"/>
                                        <materialDesign:PackIcon Kind="Timelapse" Margin="0,0,10,0"/>

                                        <TextBlock Text="{Binding DownloadRate}"/>
                                        <materialDesign:PackIcon Kind="TrendingUp" Margin="0,0,10,0"/>
                                    </StackPanel>

                                    <ProgressBar Value="{Binding Progress}" Grid.Row="1" Visibility="{Binding DetailVisibility}"/>

                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Grid.Column="1">
                                        <materialDesign:PackIcon Kind="{Binding ButtonKind}" Width="25" Height="auto"/>
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListView" x:Key="listViewEpsiodesOfflineTemplate" BasedOn="{StaticResource listViewEpisodeBaseTemplate}">
                <Setter Property="ItemsSource" Value="{Binding AnimeEpisodes}"/>
                <Setter Property="ItemTemplate" >
                    <Setter.Value>
                        <DataTemplate>
                            <customControl:OfflineAnimeListviewItem EpisodeName="{Binding EpisodeName}" Height="75"
                                                                    Thumbnail="{Binding CurrentThumbnail}"
                                                                    MediaLocation="{Binding MediaLocation}"
                                                                    EpisodeNameFontSize="{DynamicResource Heading2}"
                                                                    PlayButtonStyle="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                                                    DeleteButtonStyle="{StaticResource MaterialDesignFlatButton}"
                                                                    PlayButton_Clicked="OfflineAnimeListviewItem_PlayButton_Clicked"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListView" x:Key="listViewFriendListTemplate" BasedOn="{StaticResource listViewEpisodeBaseTemplate}">
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid Height="50">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>

                                <Grid>
                                    <Ellipse Width="50" Fill="OrangeRed"/>
                                </Grid>

                                <TextBlock VerticalAlignment="Center" FontSize="{DynamicResource Heading2}" Grid.Column="2">
                                    <TextBlock Text="{Binding Username}" Foreground="{DynamicResource ForeGroundColor}"/>
                                    <TextBlock Text="#" Foreground="{DynamicResource FileSize}"/>
                                    <TextBlock Text="{Binding UserID}" Foreground="{DynamicResource FileSize}"/>
                                </TextBlock>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Grid.Column="3">
                                    <materialDesign:PackIcon Kind="AccountRemove" Foreground="{DynamicResource ForeGroundColor}"/>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Grid.Column="4">
                                    <materialDesign:PackIcon Kind="Wechat" Foreground="{DynamicResource ForeGroundColor}"/>
                                </Button>

                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <tb:TaskbarIcon x:Key="applicationTaskbarPopup" ToolTipText="HelloWorld" PopupActivation="RightClick"
                            IconSource="pack://application:,,,/Resources/UADIcon.ico" Mouse.PreviewMouseUp="FocusOnMainWindow">
                <tb:TaskbarIcon.TrayToolTip>
                    <Border BorderBrush="{DynamicResource ForeGroundColor}" BorderThickness="1">
                        <Grid Background="Black" >
                            <Grid Height="85" Width="500" Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Source="pack://application:,,,/Resources/UADIcon.png" Height="75" Width="75" Stretch="Uniform"
                                   Margin="5" Grid.RowSpan="2"/>
                                <TextBlock Text="Universal Anime Downloader (Idle)" FontWeight="Bold" Grid.Column="1"
                                       Foreground="{DynamicResource ForeGroundColor}" FontSize="{DynamicResource Heading2}"
                                       HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBlock Text="Right-click for further options" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right"
                                       Foreground="{DynamicResource FileSize}" FontSize="{DynamicResource Heading3}" FontStyle="Italic"/>
                            </Grid>
                        </Grid>
                    </Border>
                </tb:TaskbarIcon.TrayToolTip>
                <tb:TaskbarIcon.TrayPopup>
                    <Border BorderBrush="{DynamicResource ForeGroundColor}" BorderThickness="1">
                        <Grid Background="Black">
                            <Grid Height="500" Width="650" Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="pack://application:,,,/Resources/UADIcon.png" Height="75" Width="75" Stretch="Uniform"
                                           Margin="5"/>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="Tachbana Yui's Solution" FontSize="{DynamicResource Heading2}"
                                                   Foreground="{DynamicResource FileSize}" FontStyle="Italic"
                                                   HorizontalAlignment="Right"/>
                                        <TextBlock Text="Universal Anime Downloader" FontWeight="Bold" 
                                                   Foreground="{DynamicResource ForeGroundColor}" FontSize="{DynamicResource Heading}"
                                                   HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                                <StackPanel Grid.Row="1">
                                    <Border BorderBrush="{DynamicResource ForeGroundColor}" BorderThickness="1" Margin="0,5,0,5">
                                        <Grid Height="200">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Current operation: " Foreground="{DynamicResource ForeGroundColor}"
                                                       FontSize="{DynamicResource Heading2}"/>
                                            <TextBlock Text="Nothing to show here!" Foreground="{DynamicResource FileSize}"
                                                       FontSize="{DynamicResource Heading3}" Grid.Row="1"
                                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            <ListBox/>
                                        </Grid>
                                    </Border>
                                    <TextBlock Text="Screen Blocker Option:" Foreground="{DynamicResource ForeGroundColor}" FontSize="{DynamicResource Heading2}"/>
                                    <StackPanel>
                                        <StackPanel.Resources>
                                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                                <Setter Property="Height" Value="50"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        <Button Click="ScreenBlocker_Click">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="10"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <materialDesign:PackIcon Kind="BlockHelper" FontSize="{DynamicResource Heading3}"
                                               Foreground="{DynamicResource ForeGroundColor}" VerticalAlignment="Center"/>
                                                <TextBlock Text="Toggle Screen Blocker" FontSize="{DynamicResource Heading3}"
                                               Foreground="{DynamicResource ForeGroundColor}" Grid.Column="2" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Button>
                                        <Button Click="FakeAppCrash_Click">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="10"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <materialDesign:PackIcon Kind="ImageBrokenVariant" FontSize="{DynamicResource Heading3}"
                                               Foreground="{DynamicResource ForeGroundColor}" VerticalAlignment="Center"/>
                                                <TextBlock Text="Toggle Fake App Crash" FontSize="{DynamicResource Heading3}"
                                               Foreground="{DynamicResource ForeGroundColor}" Grid.Column="2" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Button>
                                        <Button Click="BackgroundPlayer_Click">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="10"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <materialDesign:PackIcon Kind="Incognito" FontSize="{DynamicResource Heading3}"
                                               Foreground="{DynamicResource ForeGroundColor}" VerticalAlignment="Center"/>
                                                <TextBlock Text="Toggle BackgroundPlayer" FontSize="{DynamicResource Heading3}"
                                               Foreground="{DynamicResource ForeGroundColor}" Grid.Column="2" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </tb:TaskbarIcon.TrayPopup>
            </tb:TaskbarIcon>

            <userControl:UADPlayer x:Key="uadEmbededPlayer" Grid.Row="1" Grid.RowSpan="2" 
                                   ImageLibraryLocation="E:\Testlib\" Title="Kunoichi Demo Koi ga Shitai"
                                   SubbedTitle="Off vocal version"/>

            <setting:SettingsManager x:Key="AppSetting"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

                <!--Color Palete Here-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepOrange.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.LightBlue.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>