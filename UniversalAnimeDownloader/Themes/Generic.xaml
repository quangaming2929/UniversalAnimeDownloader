<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:UniversalAnimeDownloader.ValueConverters"
    xmlns:local="clr-namespace:UniversalAnimeDownloader.CustomControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:materialDesignConverter="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/DefinedResources/VisualValueResources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type local:CarouselPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CarouselPanel}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="root">
                            <Grid.Resources>
                                <converters:ReferenceEqualValueConverter x:Key="vc" />

                                <Style x:Key="NavButton" TargetType="ToggleButton">
                                    <Setter Property="Width" Value="10" />
                                    <Setter Property="Height" Value="10" />
                                    <Setter Property="Background" Value="LightBlue" />
                                    <Setter Property="Margin" Value="3,0,3,0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Ellipse
                                                    x:Name="cnt"
                                                    Fill="{TemplateBinding Background}"
                                                    Stroke="{TemplateBinding Background}"
                                                    StrokeThickness="1" />
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="false">
                                                        <Setter TargetName="cnt" Property="Fill" Value="Transparent" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style x:Key="AutoSizeIconPack" TargetType="materialDesign:PackIcon">
                                    <Setter Property="Width" Value="auto" />
                                    <Setter Property="Height" Value="auto" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                </Style>

                                <Style x:Key="leftNavButton" TargetType="Button">
                                    <Setter Property="Width" Value="50" />
                                    <Setter Property="Height" Value="100" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <Rectangle Fill="White" Opacity="0.0005" />
                                                    <materialDesign:PackIcon
                                                        Foreground="{TemplateBinding Background}"
                                                        Kind="ChevronLeft"
                                                        Style="{StaticResource AutoSizeIconPack}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style x:Key="rightNavButton" TargetType="Button">
                                    <Setter Property="Width" Value="50" />
                                    <Setter Property="Height" Value="100" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <Rectangle Fill="White" Opacity="0.0005" />
                                                    <materialDesign:PackIcon
                                                        Foreground="{TemplateBinding Background}"
                                                        Kind="ChevronRight"
                                                        Style="{StaticResource AutoSizeIconPack}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Rectangle Fill="White" Opacity="0.01" />
                            <Controls:FlipView
                                x:Name="slider"
                                CircularNavigation="True"
                                IsBannerEnabled="False"
                                IsNavigationEnabled="False"
                                ItemTemplate="{TemplateBinding SlideItemTemplate}"
                                ItemsSource="{TemplateBinding SlideItemsSource}"
                                SelectedIndex="{Binding SlideIndex, RelativeSource={RelativeSource TemplatedParent}}" />

                            <ItemsControl
                                x:Name="pagerContainer"
                                Margin="25"
                                VerticalAlignment="Bottom"
                                ItemsSource="{TemplateBinding SlideItemsSource}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Bottom"
                                            Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ToggleButton
                                            Background="{Binding PagerBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CarouselPanel}}}"
                                            Command="{Binding TestCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CarouselPanel}}"
                                            CommandParameter="{Binding}"
                                            Style="{Binding PagerButtonStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CarouselPanel}}}">
                                            <ToggleButton.IsChecked>
                                                <MultiBinding Converter="{StaticResource vc}" Mode="OneWay">
                                                    <Binding Mode="OneWay" />
                                                    <Binding
                                                        ElementName="slider"
                                                        Mode="OneWay"
                                                        Path="SelectedItem" />
                                                </MultiBinding>
                                            </ToggleButton.IsChecked>
                                        </ToggleButton>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <Button
                                x:Name="btnBack"
                                Margin="15"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{Binding BackNavigationButtonBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CarouselPanel}}}"
                                Style="{TemplateBinding BackNavigationStyle}" />

                            <Button
                                x:Name="btnForward"
                                Margin="15"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="{Binding ForwardNavigationButtonBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CarouselPanel}}}"
                                Style="{TemplateBinding ForwardNavigationStyte}" />


                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="slider" Property="IsNavigationEnabled" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ColorfulTabDecorator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorfulTabDecorator}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.MergedDictionaries>
                                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                                        <ResourceDictionary Source="pack://application:,,,/DefinedResources/VisualValueResources.xaml" />
                                    </ResourceDictionary.MergedDictionaries>

                                    <Style TargetType="{x:Type local:SidePanelNavigateButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type local:SidePanelNavigateButton}">
                                                    <Border
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ResourceDictionary>
                            </Grid.Resources>

                            <Rectangle Fill="#15FFFFFF">
                                <Rectangle.Visibility>
                                    <MultiBinding Converter="{StaticResource MatchIndexToVisibilityConverter}">
                                        <Binding Path="CurrentTabIndex" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                        <Binding Path="ControlTabIndex" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                    </MultiBinding>
                                </Rectangle.Visibility>
                            </Rectangle>
                            <DockPanel>
                                <Rectangle
                                    MinWidth="10"
                                    MinHeight="10"
                                    DockPanel.Dock="{TemplateBinding TabMarkerDock}">
                                    <Rectangle.Fill>
                                        <MultiBinding Converter="{StaticResource MatchIndexToRandomSolidColorBrushConverter}">
                                            <Binding Path="CurrentTabIndex" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                            <Binding Path="ControlTabIndex" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                        </MultiBinding>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Grid />
                            </DockPanel>

                            <Button
                                x:Name="btn"
                                Height="{TemplateBinding Height}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Command="{TemplateBinding ButtonCommand}"
                                CommandParameter="{TemplateBinding ButtonCommandParameter}"
                                Content="{TemplateBinding Content}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid>
                                                        <materialDesign:Ripple />
                                                        <ContentPresenter
                                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=local:SidePanelNavigateButton}}"
                                                            VerticalAlignment="Stretch"
                                                            Content="{TemplateBinding Content}" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SidePanelNavigateButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SidePanelNavigateButton}">
                    <Border
                        x:Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Rectangle
                                x:Name="overlay"
                                Fill="White"
                                Opacity="0" />
                            <local:ColorfulTabDecorator
                                Height="{TemplateBinding Height}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                ButtonCommand="{TemplateBinding ButtonCommand}"
                                ButtonCommandParameter="{TemplateBinding ButtonCommandParameter}"
                                ControlTabIndex="{TemplateBinding ControlTabIndex}"
                                CurrentTabIndex="{TemplateBinding CurrentTabIndex}">
                                <Grid Margin="15,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="27" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon
                                        x:Name="icon"
                                        Width="{DynamicResource Heading2}"
                                        Height="{DynamicResource Heading2}"
                                        VerticalAlignment="Center"
                                        Kind="{TemplateBinding SidePanelIconKind}"
                                        RenderTransformOrigin="0.5,0.5">
                                        <materialDesign:PackIcon.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                    <TextBlock
                                        Grid.Column="2"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        FontSize="{DynamicResource Heading2}"
                                        FontWeight="Normal"
                                        Foreground="{DynamicResource MaterialDesignBody}"
                                        Text="{TemplateBinding SidePanelText}" />
                                </Grid>
                            </local:ColorfulTabDecorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overlay" Property="Opacity" Value="0.15" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=bd, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding Path=EnableAnimation, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="closing" />
                                <BeginStoryboard x:Name="main">
                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="0:0:0.25"
                                            Storyboard.TargetName="icon"
                                            Storyboard.TargetProperty="RenderTransform.Children[2].Angle"
                                            To="15"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            BeginTime="0:0:0.55"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="icon"
                                            Storyboard.TargetProperty="RenderTransform.Children[2].Angle"
                                            From="15"
                                            To="-15"
                                            Duration="0:0:0.4">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            BeginTime="0:0:0.25"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="icon"
                                            Storyboard.TargetProperty="RenderTransform.Children[3].Y"
                                            From="0"
                                            To="-25"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard x:Name="closing">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="icon"
                                            Storyboard.TargetProperty="RenderTransform.Children[2].Angle"
                                            To="0"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="icon"
                                            Storyboard.TargetProperty="RenderTransform.Children[3].Y"
                                            To="0"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                                <RemoveStoryboard BeginStoryboardName="main" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
